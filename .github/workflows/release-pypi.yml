name: Release pypi

on:
  push:
    tags: [ 'v*' ]

jobs:
  build-wheels:
    name: Build Wheels
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Build wheel
        if: "${{ matrix.os != 'macos-latest' }}"
        uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --strip -m crates/monotrail/Cargo.toml
          manylinux: auto
      - name: Build wheel (macos)
        if: "${{ matrix.os == 'macos-latest' }}"
        uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --strip --target universal2-apple-darwin -m crates/monotrail/Cargo.toml
          manylinux: auto
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: target/wheels

  build-sdist:
    name: Release sdist
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: messense/maturin-action@v1
        with:
          command: sdist -m crates/monotrail/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: target/wheels

  upload:
    name: Release Upload
    runs-on: ubuntu-latest
    needs: [ build-wheels, build-sdist ]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPi
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --skip-existing *